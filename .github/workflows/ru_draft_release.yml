name: Draft Russian Release

on: 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    # ----------------------------------------
    # Setup
    # ----------------------------------------

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        repository: 'digitalpalidictionary/dpd-db'
        ref: 'main'
        submodules: 'recursive'

    - name: Remove large dirs
      run: |
        rm -rf ${{ github.workspace }}/resources/bjt/dev/*
        rm -rf ${{ github.workspace }}/resources/sc-data/html_text/*

    - name: Unzip deconstructor_output
      run: |
        cd ${{ github.workspace }}/resources/deconstructor_output
        tar -xzvf deconstructor_output.json.tar.gz
        ls -la
        cd ${{ github.workspace }}/

    - name: Install dictzip
      run: sudo apt-get update && sudo apt-get install -y dictzip

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python -

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.22.2'


    # ----------------------------------------
    # Build Database
    # ----------------------------------------

    - name: Config for GitHub release
      run: poetry run python exporter/goldendict/ru_components/tools/ru_config_github_release.py

    - name: Create dpd.db
      run: touch dpd.db

    - name: Build the database
      run: poetry run python scripts/build/db_rebuild_from_tsv.py

    - name: Run initial setup script
      run: poetry run bash scripts/bash/initial_setup_run_once.sh
    
    - name: Create version
      run: poetry run python tools/version.py

    - name: Create Inflection Templates
      run: poetry run python db/inflections/create_inflection_templates.py

    - name: Create Inflection Tables
      run: poetry run python db/inflections/generate_inflection_tables.py

    - name: Update Sanskrit Family Roots
      run: poetry run python scripts/build/sanskrit_root_families_updater.py

    - name: Add Root Families
      run: poetry run python db/families/family_root.py

    - name: Add Word Families
      run: poetry run db/families/family_word.py
    
    - name: Add Compound Families
      run: poetry run python db/families/family_compound.py

    - name: Add Sets
      run: poetry run python db/families/family_set.py

    - name: Add Idioms
      run: poetry run python db/families/family_idiom.py

    - name: Families to JSON
      run: poetry run python scripts/build/families_to_json.py

    - name: Run Deconstructor
      run: poetry run python scripts/build/deconstructor_output_add_to_db.py
        
    - name: Add api ca eva iti to inflections 
      run: poetry run python scripts/build/api_ca_evi_iti.py

    - name: Transliterate Inflections
      run: poetry run python db/inflections/transliterate_inflections.py

    - name: Inflections to Headwords
      run: poetry run python db/inflections/inflections_to_headwords.py

    - name: Lookup Variants and Spelling Mistakes 
      run: poetry run python db/lookup/variants_and_spelling_mistakes.py

    - name: Lookup Transliterate
      run: poetry run python db/lookup/transliterate_lookup_table.py

    - name: Lookup Help and Abbreviations
      run: poetry run python db/lookup/help_abbrev_add_to_lookup.py

    - name: Add Frequency
      run: |
        go build -o frequency go_modules/frequency/main.go
        ./frequency

    - name: Run EBT Counter
      run: poetry run python scripts/build/ebt_counter.py

    - name: Add EPD to Lookup Table
      run: poetry run python db/epd/epd_to_lookup.py

    - name: Add RPD to Lookup Table
      run: poetry run python db/rpd/rpd_to_lookup.py

    - name: Test Dealbreakers
      run: poetry run python scripts/build/dealbreakers.py

    # ----------------------------------------
    # Exporter
    # ----------------------------------------

    - name: Export Grammar Dictionary
      run: poetry run python exporter/grammar_dict/grammar_dict.py
    
    - name: Export GoldenDict & MDict
      run: poetry run python exporter/goldendict/main.py

    - name: Export Deconstructor
      run: poetry run python exporter/deconstructor/deconstructor_exporter.py

    - name: Export Kindle & ePub
      run: poetry run python exporter/kindle/kindle_exporter.py

    - name: Check disk space and memory
      run: |
        free -h  # Check available memory
        df -h    # Check disk space

    - name: Zip GoldenDict & Mdict
      run: poetry run python exporter/goldendict/ru_components/tools/ru_zip_goldendict_mdict.py

    # ----------------------------------------
    # Export DPD + RUS and DPD + SBS
    # ----------------------------------------

    - name: Config for DPD + RUS
      run: poetry run python exporter/goldendict/ru_components/tools/config_github_release_dpd_rus.py

    - name: Export GoldenDict & MDict for DPD + RUS
      run: poetry run python exporter/goldendict/main.py

    - name: Zip GoldenDict & Mdict for DPD + RUS
      run: poetry run python exporter/goldendict/ru_components/tools/zip_dpd_rus.py

    - name: Config for DPD + SBS
      run: poetry run python exporter/goldendict/ru_components/tools/config_github_release_dpd_sbs.py

    - name: Export GoldenDict & MDict for DPD + SBS
      run: poetry run python exporter/goldendict/main.py

    - name: Zip GoldenDict & Mdict for DPD + SBS
      run: poetry run python exporter/goldendict/ru_components/tools/zip_dpd_sbs.py
    
    # ----------------------------------------
    # Upload Artifacts
    # ----------------------------------------

    # ----------------------------------------
    # Create Draft Release
    # ----------------------------------------

    - name: Set Release Date
      id: set_release_date
      run: echo "RELEASE_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Set Release Tag
      id: set_release_tag
      run: echo "RELEASE_TAG=$(poetry run python scripts/build/version_print.py)" >> $GITHUB_ENV

    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        release_name: ${{ env.RELEASE_DATE }}
        body: |
          ### [Цифровой Словарь Пали](https://digitalpalidictionary.github.io/rus/)

          DPD - это богатый возможностями словарь палийского языка на русском, который работает [онлайн](https://dpdict.net/ru/) и в GoldenDict, MDict, DictTango и Kindle, или в любом другом приложении, поддерживающем форматы stardict, mdict, epub, mobi.

          На этой странице доступа свежая русской версия словаря в разных форматах. Последнюю версию оригинального английского DPD можно найти на [этой GitHub странице](https://github.com/digitalpalidictionary/digitalpalidictionary/releases). Там же можно почитать историю изменений и дополнений.

          Также доступна совмещенная версия английского DPD с русским переводом. Более подробную информацию можно найти на [этой странице.](https://digitalpalidictionary.github.io/rus/dpd_rus.html)

          ---

          Цифровой Словарь Пали распространяется под лицензией [Атрибуция-Некоммерчески 4.0 Всемирная.](http://creativecommons.org/licenses/by-nc/4.0/)

          <a rel="license" href="http://creativecommons.org/licenses/by-nc/4.0/"><img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png" /></a><br />
        draft: true
        prerelease: false

    # ----------------------------------------
    # Update Release Assets
    # ----------------------------------------

    - name: Upload Asset ru-dpd-goldendict.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: exporter/share/ru-dpd-goldendict.zip
        asset_name: ru-dpd-goldendict.zip
        asset_content_type: application/zip

    - name: Upload Asset ru-dpd-mdict.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: exporter/share/ru-dpd-mdict.zip
        asset_name: ru-dpd-mdict.zip
        asset_content_type: application/zip

    - name: Upload Asset ru-dpd-kindle.epub
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: exporter/share/ru-dpd-kindle.epub
        asset_name: ru-dpd-kindle.epub
        asset_content_type: application/zip

    - name: Upload Asset ru-dpd-kindle.mobi
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: exporter/share/ru-dpd-kindle.mobi
        asset_name: ru-dpd-kindle.mobi
        asset_content_type: application/zip

    - name: Upload Asset dpd+sbs-goldendict.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: exporter/share/dpd+sbs-goldendict.zip
        asset_name: dpd+sbs-goldendict.zip
        asset_content_type: application/zip

    - name: Upload Asset dpd+sbs-mdict.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: exporter/share/dpd+sbs-mdict.zip
        asset_name: dpd+sbs-mdict.zip
        asset_content_type: application/zip

    - name: Upload Asset dpd+rus-goldendict.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: exporter/share/dpd+rus-goldendict.zip
        asset_name: dpd+rus-goldendict.zip
        asset_content_type: application/zip

    - name: Upload Asset dpd+rus-mdict.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: exporter/share/dpd+rus-mdict.zip
        asset_name: dpd+rus-mdict.zip
        asset_content_type: application/zip

